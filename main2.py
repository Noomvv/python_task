import telebot
import time
import threading
import os
from dotenv import load_dotenv

load_dotenv()
API_TOKEN = os.getenv('API_TOKEN')
bot = telebot.TeleBot(API_TOKEN)
print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω')

def reminder_thread(chat_id, reminder_text, delay):
    time.sleep(delay)
    bot.send_message(chat_id, reminder_text)

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, f"–ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}üëΩ\n/remind - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")

@bot.message_handler(commands=['remind'])
def set_reminder(message):
    bot.reply_to(message, "–ù–∞–ø–∏—à–∏ –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")

def process_reminder(message):

    parts = message.text.split(" ", 1)
    delay = int(parts[0])
    if len(parts) < 2 or not parts[1]:
        raise ValueError("–ù–µ —É–∫–∞–∑–∞–Ω —Ç–µ–∫—Å—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è")
    reminder_text = parts[1]
    chat_id = message.chat.id
    threading.Thread(target=reminder_thread, args=(chat_id, reminder_text, delay)).start()
    bot.reply_to(message, "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")

@bot.message_handler(func=lambda message: True)
def reminder_handler(message):
    process_reminder(message)

bot.polling(none_stop=True)
